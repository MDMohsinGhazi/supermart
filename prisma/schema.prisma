// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  name     String
  password String
  role     Role   @default(CUSTOMER)
  phone    String?
  address  String?
  
  orders   Order[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  description String?
  image       String?
  
  products Product[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  originalPrice Float?
  image       String
  images      String[]
  stock       Int     @default(0)
  unit        String  @default("pcs")
  weight      String?
  featured    Boolean @default(false)
  inStock     Boolean @default(true)
  
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])
  
  orderItems OrderItem[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  orderNumber String     @unique
  status     OrderStatus @default(PENDING)
  total      Float
  subtotal   Float
  tax        Float       @default(0)
  
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  
  shippingAddress String
  billingAddress  String?
  phone          String
  
  items OrderItem[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  quantity Int
  price    Float
  
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  
  orderId String @db.ObjectId
  order   Order  @relation(fields: [orderId], references: [id])
  
  createdAt DateTime @default(now())
}

enum Role {
  CUSTOMER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}